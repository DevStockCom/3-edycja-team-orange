import { useState } from 'react';
import { v4 } from 'uuid';
import DeleteIcon from '@mui/icons-material/Delete';
import CheckIcon from '@mui/icons-material/Check';

function App() {
  const [value, setValue] = useState('');
  const [items, setItems] = useState([]);
  const [highPriorityItems, setHighPriorityItems] = useState([]);

  const handleChange = (event) => {
    setValue(event.target.value);
  };

  const handleAddTaskBtn = () => {
    const newItems = [
      ...items,
      {
        id: v4(),
        value,
        isCompleted: false,
      },
    ];
    setItems(newItems);
    setValue('');
  };

  const markAsCompleted = (id) => {
    const index = items.findIndex((item) => item.id === id);
    const newItem = {
      ...items[index],
      isCompleted: !items[index].isCompleted,
    };

    const newItems = [...items];
    newItems.splice(index, 1, newItem);

    setItems(newItems);
  };

  const deleteTask = (id) => {
    const index = items.findIndex((item) => item.id === id);
    const newItems = [...items];
    newItems.splice(index, 1);
    setItems(newItems);
  };

  const GetDate = () => {
    const newDate = new Date();
    const date = newDate.getDate();
    const month = newDate.getMonth() + 1;
    const year = newDate.getFullYear();

    return (
      <span>
        {date}/{month}/{year}
      </span>
    );
  };

  const TaskCounter = () => {
    return <div>{items.length} Tasks</div>;
  };

  const setPriority = (id, value) => {
    const index = items.findIndex((item) => item.id === id);
    const newItem = {
      ...items[index],
      priority: value,
    };
    const newItems = [...items];
    newItems.splice(index, 1, newItem);

    setItems(newItems);
    console.log(newItems[index].priority);

    if (newItems[index].priority === 'high') {
      setHighPriorityItems([...highPriorityItems, newItems[index]]);
    } else {
      highPriorityItems.splice(index, 1);
    }
  };
  console.log(highPriorityItems);

  return (
    <div>
      <h1>TODO app</h1>
      <input onChange={handleChange} value={value}></input>
      <button onClick={handleAddTaskBtn}>Add task</button>
      <div>
        <ul>
          {items.map((item) => (
            <li key={item.id}>
              <div>
                <span className={item.isCompleted ? 'text-strike' : null}>
                  {item.value}
                </span>
                <CheckIcon onClick={() => markAsCompleted(item.id)} />
                <DeleteIcon onClick={() => deleteTask(item.id)} />
                <GetDate></GetDate>
                <span>
                  <select
                    onChange={(event) =>
                      setPriority(item.id, event.target.value)
                    }
                  >
                    <option value={'low'}>Low</option>
                    <option value={'medium'}>medium </option>
                    <option value={'high'}>high </option>
                  </select>
                </span>
              </div>
            </li>
          ))}
        </ul>
        <TaskCounter></TaskCounter>
        <div>
          <ul>
            {highPriorityItems.map((item) => (
              <li key={item.id}>{item.value}</li>
            ))}
          </ul>
        </div>
      </div>
    </div>
  );
}

export default App;